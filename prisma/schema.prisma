// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  phone         String?
  role          Role      @default(WORKER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts   Account[]
  sessions   Session[]
  Contractor Contractor?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ---------
// Enums
// ---------
enum Role {
  ADMIN
  SUPERVISOR
  WORKER
}

/// =====================
/// Milestone 1: Masters
/// =====================

model Builder {
  id          String  @id @default(cuid())
  name        String
  /// Excel: "Company code" (must be unique)
  companyCode String  @unique
  abn         String? @db.VarChar(20)
  phone       String? @db.VarChar(30)
  address     String?
  website     String?

  /// Excel: default rates (optional, can be overridden per worker/week)
  supervisorRate Decimal? @db.Decimal(10, 2)
  tieHandRate    Decimal? @db.Decimal(10, 2)
  tonnageRate    Decimal? @db.Decimal(10, 2)

  /// Excel: "Person" & "email" (optional)
  contactPerson String?
  contactEmail  String?

  locations BuilderLocation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([companyCode])
}

model BuilderLocation {
  id String @id @default(cuid())

  builderId String
  builder   Builder @relation(fields: [builderId], references: [id], onDelete: Cascade)

  /// Human label, e.g. "317 Stafford Road" or site nickname
  label   String
  address String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  /// Prevent duplicate labels within the same builder
  @@unique([builderId, label])
  @@index([builderId])
}

model Contractor {
  id String @id @default(cuid())

  /// Link to your existing User (optional until portal access is given)
  userId String? @unique
  user   User?   @relation(fields: [userId], references: [id])

  /// From ABNContractors sheet
  email     String? @unique
  nickname  String  @unique
  firstName String?
  lastName  String?
  fullName  String?

  hourlyRate Decimal @db.Decimal(10, 2)

  /// Business & payment
  abn         String? @db.VarChar(20)
  bankName    String?
  bsb         String? @db.VarChar(10)
  accountNo   String? @db.VarChar(32)
  phone       String? @db.VarChar(30)
  homeAddress String?

  /// Profile
  position   String? // e.g., "Steel fixer", "Welder"
  experience String? // free-form, e.g., "2 years"

  /// Excel "on off" -> active
  active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([nickname])
  @@index([active])
}
